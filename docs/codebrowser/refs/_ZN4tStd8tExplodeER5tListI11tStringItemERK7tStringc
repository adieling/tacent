<dec f='Modules/Foundation/Inc/Foundation/tString.h' l='607' type='int tStd::tExplode(tList&lt;tStringItem&gt; &amp; components, const tString &amp; src, char divider = &apos;_&apos;)'/>
<doc f='Modules/Foundation/Inc/Foundation/tString.h' l='602'>// Separates the src string into components based on the divider. If src was &quot;abc_def_ghi&quot;, components will get
	// &quot;abc&quot;, &quot;def&quot;, and &quot;ghi&quot; appended to it. Returns the number of components appended to the components list. The
	// version that takes the string divider allows for multicharacter dividers. Note that &quot;abc__def_ghi&quot; will explode
	// to &quot;abc&quot;, &quot;&quot;, &quot;def&quot;, and &quot;ghi&quot;. Empty strings are preserved allowing things like exploding text files based on
	// linefeeds. You&apos;ll get one item per line even if the line only contains a linefeed.</doc>
<def f='Modules/Foundation/Src/tString.cpp' l='736' ll='751' type='int tStd::tExplode(tList&lt;tStringItem&gt; &amp; components, const tString &amp; src, char divider = &apos;_&apos;)'/>
<use f='Modules/Foundation/Src/tString.cpp' l='763' u='c' c='_ZN4tStd8tExplodeER5tListI11tStringItemERK7tStringS6_'/>
<use f='Modules/Foundation/Src/tVersion.cpp' l='41' u='c' c='_ZN8tVersion6ParserC1EPKc'/>
<use f='Modules/Image/Src/tImageHDR.cpp' l='337' u='c' c='_ZN6tImage9tImageHDR4LoadEPhiRKNS0_10LoadParamsE'/>
<use f='Modules/Image/Src/tImageHDR.cpp' l='345' u='c' c='_ZN6tImage9tImageHDR4LoadEPhiRKNS0_10LoadParamsE'/>
<use f='Modules/Math/Inc/Math/tInterval.h' l='423' u='c' c='_ZN5tMath12tIntervalSet3SetERK7tString'/>
<use f='Modules/System/Src/tCmdLine.cpp' l='314' u='c' c='_ZN8tCmdLine6tParseEPKDubb'/>
<use f='Modules/System/Src/tMachine.cpp' l='264' u='c' c='_ZN7tSystem21tGetXDGMultipleEnvVarER5tListI11tStringItemERK7tStringS6_'/>
<use f='Modules/System/Src/tMachine.cpp' l='281' u='c' c='_ZN7tSystem21tGetXDGMultipleEnvVarER5tListI11tStringItemERK7tStringS6_'/>
