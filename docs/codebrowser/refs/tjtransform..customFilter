<dec f='Modules/Image/Contrib/TurboJpeg/turbojpeg.h' l='643' type='int (*)(short *, tjregion, tjregion, int, int, struct tjtransform *)'/>
<use f='Modules/Image/Src/tImageJPG.cpp' l='392' u='w' c='_ZN6tImage9tImageJPG17LosslessTransformENS0_9TransformEb'/>
<offset>256</offset>
<doc f='Modules/Image/Contrib/TurboJpeg/turbojpeg.h' l='610'>/**
   * A callback function that can be used to modify the DCT coefficients
   * after they are losslessly transformed but before they are transcoded to a
   * new JPEG image.  This allows for custom filters or other transformations
   * to be applied in the frequency domain.
   *
   * @param coeffs pointer to an array of transformed DCT coefficients.  (NOTE:
   * this pointer is not guaranteed to be valid once the callback returns, so
   * applications wishing to hand off the DCT coefficients to another function
   * or library should make a copy of them within the body of the callback.)
   *
   * @param arrayRegion #tjregion structure containing the width and height of
   * the array pointed to by &lt;tt&gt;coeffs&lt;/tt&gt; as well as its offset relative to
   * the component plane.  TurboJPEG implementations may choose to split each
   * component plane into multiple DCT coefficient arrays and call the callback
   * function once for each array.
   *
   * @param planeRegion #tjregion structure containing the width and height of
   * the component plane to which &lt;tt&gt;coeffs&lt;/tt&gt; belongs
   *
   * @param componentID ID number of the component plane to which
   * &lt;tt&gt;coeffs&lt;/tt&gt; belongs (Y, Cb, and Cr have, respectively, ID&apos;s of 0, 1,
   * and 2 in typical JPEG images.)
   *
   * @param transformID ID number of the transformed image to which
   * &lt;tt&gt;coeffs&lt;/tt&gt; belongs.  This is the same as the index of the transform
   * in the &lt;tt&gt;transforms&lt;/tt&gt; array that was passed to #tjTransform().
   *
   * @param transform a pointer to a #tjtransform structure that specifies the
   * parameters and/or cropping region for this transform
   *
   * @return 0 if the callback was successful, or -1 if an error occurred.
   */</doc>
